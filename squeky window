function maxSlidingWindow(nums, k) {
    if (nums.length === 0 || k === 0) return [];

    let result = [];
    let deque = [];

    for (let i = 0; i < nums.length; i++) {
        // Remove indices of elements not in the sliding window
        if (deque.length > 0 && deque[0] < i - k + 1) {
            deque.shift();
        }

        while (deque.length > 0 && nums[deque[deque.length - 1]] < nums[i]) {
            deque.pop();
        }


        deque.push(i);

        if (i >= k - 1) {
            result.push(nums[deque[0]]);
        }
    }

    return result;
}

console.log(maxSlidingWindow([1, 3, -1, -3, 5, 3, 6, 7], 3)); // Output: [3, 3, 5, 5, 6, 7]
console.log(maxSlidingWindow([1, 2, 3, 4], 1)); // Output: [1, 2, 3, 4]
console.log(maxSlidingWindow([1, 2, 3, 4], 2)); // Output: [2, 3, 4]
console.log(maxSlidingWindow([1, 2, 3, 4], 3)); // Output: [3, 4]
console.log(maxSlidingWindow([1, 2, 3, 4], 4)); // Output: [4]
console.log(maxSlidingWindow([1, 2, 3, 4], 5)); // Output: []
